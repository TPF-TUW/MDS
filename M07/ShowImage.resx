<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ShowImage.IconOptions.LargeImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>